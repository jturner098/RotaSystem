/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.copyofrotasystem;
import java.sql.*;
import java.time.LocalDate;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author josephturner
 */
public class YourCalendar extends javax.swing.JFrame {
DAO db = new DAO();
String firstName;
int staffID;
static User user;
LocalDate startDate;
LocalDate endDate;
    /**
     * Creates new form YourShifts
     */
    public YourCalendar(User user) {
        initComponents();
        this.user = user;
        startDate = LocalDate.now();
        endDate = LocalDate.now();
        StartDateField.setText(String.valueOf(startDate));
        EndDateField.setText(String.valueOf(endDate));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BackButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        HolidayTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ShiftTable = new javax.swing.JTable();
        ShiftTableHeader = new javax.swing.JLabel();
        HolidayTableHeader = new javax.swing.JLabel();
        btnShowAllShifts = new javax.swing.JButton();
        StartDate = new javax.swing.JLabel();
        btnForwardDate = new javax.swing.JButton();
        StartDateField = new javax.swing.JTextField();
        btnBackDate = new javax.swing.JButton();
        EndDate = new javax.swing.JLabel();
        btnBackDate1 = new javax.swing.JButton();
        EndDateField = new javax.swing.JTextField();
        btnForwardDate1 = new javax.swing.JButton();
        btnShowShifts = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        BackButton.setBackground(new java.awt.Color(128, 191, 180));
        BackButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        BackButton.setText("Back");
        BackButton.setToolTipText("");
        BackButton.setPreferredSize(new java.awt.Dimension(103, 54));
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        HolidayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Start Date", "End Date", "Reason"
            }
        ));
        HolidayTable.setEnabled(false);
        jScrollPane1.setViewportView(HolidayTable);

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        jLabel1.setText("Your Calendar");

        ShiftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Start Time", "End Time", "Location"
            }
        ));
        ShiftTable.setEnabled(false);
        jScrollPane2.setViewportView(ShiftTable);

        ShiftTableHeader.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        ShiftTableHeader.setText("Shifts:");

        HolidayTableHeader.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        HolidayTableHeader.setText("Holiday:");

        btnShowAllShifts.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        btnShowAllShifts.setText("Show All Shifts");
        btnShowAllShifts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllShiftsActionPerformed(evt);
            }
        });

        StartDate.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        StartDate.setText("Start Date:");

        btnForwardDate.setText(">");
        btnForwardDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardDateActionPerformed(evt);
            }
        });

        StartDateField.setText("jTextField1");
        StartDateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartDateFieldActionPerformed(evt);
            }
        });

        btnBackDate.setText("<");
        btnBackDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackDateActionPerformed(evt);
            }
        });

        EndDate.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        EndDate.setText("End Date:");

        btnBackDate1.setText("<");
        btnBackDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackDate1ActionPerformed(evt);
            }
        });

        EndDateField.setText("jTextField1");

        btnForwardDate1.setText(">");
        btnForwardDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardDate1ActionPerformed(evt);
            }
        });

        btnShowShifts.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnShowShifts.setText("Show Shifts");
        btnShowShifts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowShiftsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(StartDate)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBackDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StartDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnForwardDate)
                .addGap(18, 18, 18)
                .addComponent(btnBackDate1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EndDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnForwardDate1)
                        .addGap(28, 28, 28)
                        .addComponent(btnShowShifts)
                        .addGap(27, 27, 27)
                        .addComponent(btnShowAllShifts)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 587, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HolidayTableHeader)
                                    .addComponent(ShiftTableHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(ShiftTableHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(StartDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnForwardDate)
                            .addComponent(btnBackDate)
                            .addComponent(StartDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(EndDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnForwardDate1)
                            .addComponent(btnBackDate1)
                            .addComponent(EndDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnShowShifts)
                            .addComponent(btnShowAllShifts))))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(HolidayTableHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        StaffMainMenu smm = new StaffMainMenu(user); // Creates an instance of the Staff Main Menu, using the staff member's details as a parameter
        smm.setVisible(true); // Makes the Staff Main Menu visible
        dispose(); // Closes the Your Calendar screen
    }//GEN-LAST:event_BackButtonActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try {
            ResultSet rs = db.UserShifts(user.getID()); // SQL Statement - Selects the staff member's shifts
            DefaultTableModel dtm = (DefaultTableModel) ShiftTable.getModel();
            dtm.setRowCount(0); // Clears the Shift table
            while (rs.next()) { // For each selected record
                String location = rs.getString("location"); // Stores the shift's location
                String date = rs.getString("shiftdate"); // Stores the shift's date
                String startTime = rs.getString("starttime"); // Stores the shift's start time
                String endTime = rs.getString("endtime"); // Stores the shift's end time
                String tableData[] = {date, startTime, endTime, location}; // Stores the shift data in a single string array
                
                
                dtm = (DefaultTableModel) ShiftTable.getModel();
                dtm.addRow(tableData); // Adds shift to the Shift table
        }
        } catch(Exception e) {
            
        }
        
        try { 
            ResultSet rs = db.UpcomingHoliday(user.getID()); // SQL Statement - Selects the staff member's upcoming holiday
            DefaultTableModel dtm = (DefaultTableModel) HolidayTable.getModel();
            dtm.setRowCount(0); // Clears the Request table
            while (rs.next()) { // For each selected record
                String startDate = rs.getString("requeststartdate"); // Stores the request's start date
                String endDate = rs.getString("requestenddate"); // Stores the request's end date
                String reason = rs.getString("reason"); // Stores the reason for the request
                String tableData[] = {startDate, endDate, reason}; // Stores the request data in a single string array
                
                
                dtm = (DefaultTableModel) HolidayTable.getModel();
                dtm.addRow(tableData); // Adds request to the Holiday table            
        }
        } catch(Exception e) {
            
        }
    }//GEN-LAST:event_formWindowActivated

    private void btnShowAllShiftsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllShiftsActionPerformed
        try {
            ResultSet rs = db.UserShifts(user.getID()); // SQL Statement - Selects the staff member's shifts
            DefaultTableModel dtm = (DefaultTableModel) ShiftTable.getModel();
            dtm.setRowCount(0); // Clears the Shift tabl
            while (rs.next()) { // For each selected record
                String location = rs.getString("location"); // Stores the shift's location
                String date = rs.getString("shiftdate"); // Stores the shift's date
                String startTime = rs.getString("starttime"); // Stores the shift's start time
                String endTime = rs.getString("endtime"); // Stores the shift's end time 
                String tableData[] = {date, startTime, endTime, location}; // Stores the shift data in a single string array
                
                
                dtm = (DefaultTableModel) ShiftTable.getModel();
                dtm.addRow(tableData); // Adds shift to the Shift table
        }
        } catch(Exception e) {
            
        }
    }//GEN-LAST:event_btnShowAllShiftsActionPerformed

    private void btnForwardDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardDateActionPerformed
        startDate = startDate.plusDays(1);
        StartDateField.setText(String.valueOf(startDate));
    }//GEN-LAST:event_btnForwardDateActionPerformed

    private void btnBackDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackDateActionPerformed
        startDate = startDate.plusDays(-1);
        StartDateField.setText(String.valueOf(startDate));
    }//GEN-LAST:event_btnBackDateActionPerformed

    private void btnBackDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackDate1ActionPerformed
        endDate = endDate.plusDays(-1);
        EndDateField.setText(String.valueOf(endDate));
    }//GEN-LAST:event_btnBackDate1ActionPerformed

    private void btnForwardDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardDate1ActionPerformed
        endDate = endDate.plusDays(1);
        EndDateField.setText(String.valueOf(endDate));
    }//GEN-LAST:event_btnForwardDate1ActionPerformed

    private void btnShowShiftsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowShiftsActionPerformed
        try {
            ResultSet rs = db.UserShiftsBetweenDates(user.getID(), StartDateField.getText(), EndDateField.getText());
            
            DefaultTableModel dtm = (DefaultTableModel) ShiftTable.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {
                String location = rs.getString("location");
                String date = rs.getString("shiftdate");
                String startTime = rs.getString("starttime");
                String endTime = rs.getString("endtime");
                String tableData[] = {date, startTime, endTime, location};
                
                
                dtm = (DefaultTableModel) ShiftTable.getModel();
                dtm.addRow(tableData);
        }
        } catch(Exception e) {
            
        }
    }//GEN-LAST:event_btnShowShiftsActionPerformed

    private void StartDateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartDateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartDateFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YourCalendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YourCalendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YourCalendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YourCalendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YourCalendar(user).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel EndDate;
    private javax.swing.JTextField EndDateField;
    private javax.swing.JTable HolidayTable;
    private javax.swing.JLabel HolidayTableHeader;
    private javax.swing.JTable ShiftTable;
    private javax.swing.JLabel ShiftTableHeader;
    private javax.swing.JLabel StartDate;
    private javax.swing.JTextField StartDateField;
    private javax.swing.JButton btnBackDate;
    private javax.swing.JButton btnBackDate1;
    private javax.swing.JButton btnForwardDate;
    private javax.swing.JButton btnForwardDate1;
    private javax.swing.JButton btnShowAllShifts;
    private javax.swing.JButton btnShowShifts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
